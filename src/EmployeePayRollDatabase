UC 1- Ability to create a payroll service database- Using MSSQL Client use create database
query to create a payroll_service database- Also you can see the DB created by using show database query
- And go to the database created by using use payroll_service query.

---------------------------------------------------------------------------------------------------------------
   CREATE DATABASE PayRoll_Service;
   Query OK, 1 row affected (0.13 sec)

   mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| kajal              |
| mysql              |
| payroll_service    |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
8 rows in set (0.00 sec)

mysql> use payroll_service;
Database changed
mysql> select database();
+-----------------+
| database()      |
+-----------------+
| payroll_service |
+-----------------+
1 row in set (0.00 sec)

---------------------------------------------------------------------------------------------------------------
UC 2- Ability to create a employee payroll table in the payroll service database to manage employee payrolls
    - Use payroll_service database in MSSQL Client
  - Use Create Table employee_payroll Query to create employee payroll table with columns id,name, salary and
   start date as column. Note Id is set to auto increment.- Understand the SQL data types to be used for the table
  - Note: SQL Queries as case insensitive.

  mysql> create table employee_payroll
      -> (
      -> id INT unsigned NOT NULL AUTO_INCREMENT,
      -> name VARCHAR(50) NOT NULL,
      -> salary Double NOT NULL,
      -> start DATE NOT NULL,
      -> PRIMARY KEY (id)
      -> );
  Query OK, 0 rows affected (6.79 sec)

  mysql> DESCRIBE employee_payroll;
  +--------+--------------+------+-----+---------+----------------+
  | Field  | Type         | Null | Key | Default | Extra          |
  +--------+--------------+------+-----+---------+----------------+
  | id     | int unsigned | NO   | PRI | NULL    | auto_increment |
  | name   | varchar(50)  | NO   |     | NULL    |                |
  | salary | double       | NO   |     | NULL    |                |
  | start  | date         | NO   |     | NULL    |                |
  +--------+--------------+------+-----+---------+----------------+
  4 rows in set (1.14 sec)

--------------------------------------------------------------------------------------------------------------
UC 3 - Ability to create employee payroll data in the payroll service database as part of CRUD Operation
     - Use payroll_service database in MSSQL Client - Use INSERT INTO employee_payroll Query to
     create employees payroll data into the employee_payroll table
  --------------------------------------------------------------------------------------------------------

 mysql> INSERT INTO employee_payroll( name, salary, start) VALUES
      -> ('Kajal', 10000.00, '2020-01-03' ),
      -> ('Sunny', 20000.00, '2019-11-13' ),
      -> ('Charlie', 30000.00, '2022-08-19');
  Query OK, 3 rows affected (0.35 sec)
  Records: 3  Duplicates: 0  Warnings: 0

  mysql> select * from employee_payroll
      -> ;
  +----+---------+--------+------------+
  | id | name    | salary | start      |
  +----+---------+--------+------------+
  |  1 | Kajal   |  10000 | 2020-01-03 |
  |  2 | Sunny   |  20000 | 2019-11-13 |
  |  3 | Charlie |  30000 | 2022-08-19 |
  +----+---------+--------+------------+
  3 rows in set (0.00 sec)


 --------------------------------------------------------------------------------------------------------------
 UC 4 -Ability to retrieve all the  employee payroll data that is added to payroll service database
       - Use payroll_service database in MSSQL Client
       - Use SELECT * FROM employee_payroll to retrieve all the data from the employee_payroll table.
  ____________________________________________________

 mysql> select * from employee_payroll
       -> ;
   +----+---------+--------+------------+
   | id | name    | salary | start      |
   +----+---------+--------+------------+
   |  1 | Kajal   |  10000 | 2020-01-03 |
   |  2 | Sunny   |  20000 | 2019-11-13 |
   |  3 | Charlie |  30000 | 2022-08-19 |
   +----+---------+--------+------------+
   3 rows in set (0.00 sec)

__________________________________________________________________________________________________________
UC 5 - Ability to retrieve salary data for a particular employee as well as all employees who have joined
       in a particular data range from the payroll service database
       - Use SELECT salary FROM employee_payroll WHERE name = 'Bill’ Query to View Bill’s salary
       - Use Select query with Where condition View employees between start dates
       - Query: WHERE start BETWEEN CAST('2018-01-01' AS DATE) AND DATE(NOW());
       - Note: Where Condition Clause is used to retrieve the row needed from the table
       - Note: Use of Database Functions like CAST() and NOW() in the Query
  ----------------------------------------------------------------
  mysql> select salary from employee_payroll where name='Kajal';
  +--------+
  | salary |
  +--------+
  |  10000 |
  +--------+
  1 row in set (0.17 sec)
  _______________________________________________
  mysql> select * from employee_payroll
      -> WHERE start BETWEEN CAST('2020-01-03' AS DATE) AND DATE(NOW());
  +----+---------+--------+------------+
  | id | name    | salary | start      |
  +----+---------+--------+------------+
  |  1 | Kajal   |  10000 | 2020-01-03 |
  |  3 | Charlie |  30000 | 2022-08-19 |
  +----+---------+--------+------------+
  2 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------------------
UC 6- Ability to add Gender to Employee Payroll Table and Update the Rows to reflect the correct
      Employee Gender- Use payroll_service database in MSSQL Client
      - Use Alter Table Command to add Field gender after the name field
      - Use Update Query to set the gender using where condition with the employee name
      - E.g. UPDATE employee_payroll set gender = 'M' where name =
   ------------------------------------------------------------------------------------------
   mysql> ALTER TABLE employee_payroll ADD gender  CHAR(10) AFTER name;
   Query OK, 0 rows affected (2.27 sec)
   Records: 0  Duplicates: 0  Warnings: 0

   mysql> select * from employee_payroll;
   +----+---------+--------+--------+------------+
   | id | name    | gender | salary | start      |
   +----+---------+--------+--------+------------+
   |  1 | Kajal   | NULL   |  10000 | 2020-01-03 |
   |  2 | Sunny   | NULL   |  20000 | 2019-11-13 |
   |  3 | Charlie | NULL   |  30000 | 2022-08-19 |
   +----+---------+--------+--------+------------+
   3 rows in set (0.03 sec)

   mysql> update employee_payroll set gender = 'Female' where name= 'Kajal';
   Query OK, 1 row affected (0.21 sec)
   Rows matched: 1  Changed: 1  Warnings: 0

   mysql> update employee_payroll set gender = 'male' where name= 'Sunny' or name='Charlie';
   Query OK, 2 rows affected (0.08 sec)
   Rows matched: 2  Changed: 2  Warnings: 0

   mysql> update employee_payroll set salary= 40000.00 where name='Kajal';
   Query OK, 1 row affected (0.12 sec)
   Rows matched: 1  Changed: 1  Warnings: 0

   mysql> select * from employee_payroll;
   +----+---------+--------+--------+------------+
   | id | name    | gender | salary | start      |
   +----+---------+--------+--------+------------+
   |  1 | Kajal   | Female |  40000 | 2020-01-03 |
   |  2 | Sunny   | male   |  20000 | 2019-11-13 |
   |  3 | Charlie | male   |  30000 | 2022-08-19 |
   +----+---------+--------+--------+------------+
   3 rows in set (0.00 sec)

____________________________________________________________________________________________________________
   UC 7 - Ability to find sum, average, min, max and number of male and female
   employees - Use payroll_service database in MSSQL Client
   - Use Database Function SUM, AVG, MIN, MAX, COUNT to do analysis by Male or Female.
   - Note: You will need to use GROUP BY GENDER grouping to get the result
   - E.g. SELECT SUM(salary) FROM employee_payroll WHERE gender = 'F' GROUP BY gender;
   ------------------------------------------------------------------------------
   mysql> SELECT AVG(salary) FROM employee_payroll WHERE gender ='Female' GROUP BY gender;
   +-------------+
   | AVG(salary) |
   +-------------+
   |       40000 |
   +-------------+
   1 row in set (2.56 sec)

   mysql> SELECT AVG(salary) FROM employee_payroll WHERE gender ='male' GROUP BY gender;
   +-------------+
   | AVG(salary) |
   +-------------+
   |       25000 |
   +-------------+
   1 row in set (0.00 sec)

   mysql> SELECT gender, AVG(salary) FROM employee_payroll GROUP BY gender;
   +--------+-------------+
   | gender | AVG(salary) |
   +--------+-------------+
   | Female |       40000 |
   | male   |       25000 |
   +--------+-------------+
   2 rows in set (0.15 sec)

   mysql> SELECT gender, SUM(salary) FROM employee_payroll GROUP BY gender;
   +--------+-------------+
   | gender | SUM(salary) |
   +--------+-------------+
   | Female |       40000 |
   | male   |       50000 |
   +--------+-------------+
   2 rows in set (0.03 sec)

   mysql> SELECT gender, COUNT(salary) FROM employee_payroll GROUP BY gender;
   +--------+---------------+
   | gender | COUNT(salary) |
   +--------+---------------+
   | Female |             1 |
   | male   |             2 |
   +--------+---------------+
   2 rows in set (0.04 sec)

   mysql> SELECT gender, COUNT(name) FROM employee_payroll GROUP BY gender;
   +--------+-------------+
   | gender | COUNT(name) |
   +--------+-------------+
   | Female |           1 |
   | male   |           2 |
   +--------+-------------+
   2 rows in set (0.00 sec)

   mysql> SELECT gender, MIN(salary) FROM employee_payroll GROUP BY gender;
   +--------+-------------+
   | gender | MIN(salary) |
   +--------+-------------+
   | Female |       40000 |
   | male   |       20000 |
   +--------+-------------+
   2 rows in set (0.07 sec)

   mysql> SELECT gender, MAX(salary) FROM employee_payroll GROUP BY gender;
   +--------+-------------+
   | gender | MAX(salary) |
   +--------+-------------+
   | Female |       40000 |
   | male   |       30000 |
   +--------+-------------+
   2 rows in set (0.00 sec)
_____________________________________________________________________________________________________________
UC 8 - Ability to extend employee_payroll data to store employee information like employee phone, address and
        department - Ensure employee department is non nullable fields.
       - Add Default Value for address field.

       mysql> ALTER TABLE employee_payroll ADD PhoneNumber Varchar(20) AFTER name;
       Query OK, 0 rows affected (2.69 sec)
       Records: 0  Duplicates: 0  Warnings: 0

       mysql> ALTER TABLE employee_payroll ADD Address Varchar(20) NOT NULL AFTER PhoneNumber;
       Query OK, 0 rows affected (0.17 sec)
       Records: 0  Duplicates: 0  Warnings: 0

       mysql> ALTER TABLE employee_payroll ADD Depatment Varchar(30) NOT NULL AFTER Address;
       Query OK, 0 rows affected (0.13 sec)
       Records: 0  Duplicates: 0  Warnings: 0

       mysql> ALTER TABLE employee_payroll ALTER Address SET DEFAULT 'Nagpur';
       Query OK, 0 rows affected (0.08 sec)
       Records: 0  Duplicates: 0  Warnings: 0

       +-------------+--------------+------+-----+---------+----------------+
       | Field       | Type         | Null | Key | Default | Extra          |
       +-------------+--------------+------+-----+---------+----------------+
       | id          | int unsigned | NO   | PRI | NULL    | auto_increment |
       | name        | varchar(50)  | NO   |     | NULL    |                |
       | PhoneNumber | varchar(20)  | YES  |     | NULL    |                |
       | Address     | varchar(20)  | NO   |     | Nagpur  |                |
       | Depatment   | varchar(30)  | NO   |     | NULL    |                |
       | gender      | char(10)     | YES  |     | NULL    |                |
       | salary      | double       | NO   |     | NULL    |                |
       | start       | date         | NO   |     | NULL    |                |
       +-------------+--------------+------+-----+---------+----------------+
       8 rows in set (0.05 sec)

       mysql> select  * from employee_payroll;
       +----+---------+-------------+---------+-----------+--------+--------+------------+
       | id | name    | PhoneNumber | Address | Depatment | gender | salary | start      |
       +----+---------+-------------+---------+-----------+--------+--------+------------+
       |  1 | Kajal   | NULL        |         |           | Female |  40000 | 2020-01-03 |
       |  2 | Sunny   | NULL        |         |           | male   |  20000 | 2019-11-13 |
       |  3 | Charlie | NULL        |         |           | male   |  30000 | 2022-08-19 |
       +----+---------+-------------+---------+-----------+--------+--------+------------+
       3 rows in set (0.00 sec)

________________________________________________________________________________________________________________
UC 9 - Ability to extend employee_payroll table to have Basic Pay, Deductions, Taxable Pay, Income Tax, Net Pay

   mysql> ALTER TABLE employee_payroll ADD BasicPay Double NOT NULL AFTER start;
   Query OK, 0 rows affected (2.30 sec)
   Records: 0  Duplicates: 0  Warnings: 0

   mysql> ALTER TABLE employee_payroll ADD Deduction Double NOT NULL AFTER BasicPay;
   Query OK, 0 rows affected (0.23 sec)
   Records: 0  Duplicates: 0  Warnings: 0

   mysql> ALTER TABLE employee_payroll ADD TaxablePay Double NOT NULL AFTER Deduction;
   Query OK, 0 rows affected (0.25 sec)
   Records: 0  Duplicates: 0  Warnings: 0

   mysql> ALTER TABLE employee_payroll ADD IncomeTax Double NOT NULL AFTER TaxabelPay;
   ERROR 1054 (42S22): Unknown column 'TaxabelPay' in 'employee_payroll'
   mysql> ALTER TABLE employee_payroll ADD IncomeTax Double NOT NULL AFTER  TaxablePay;
   Query OK, 0 rows affected (0.18 sec)
   Records: 0  Duplicates: 0  Warnings: 0

   mysql> ALTER TABLE employee_payroll ADD NetPAy Double NOT NULL AFTER IncomeTax;
   Query OK, 0 rows affected (0.39 sec)
   Records: 0  Duplicates: 0  Warnings: 0

   mysql> select  * from employee_payroll;
   +----+---------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
   | id | name    | PhoneNumber | Address | Depatment | gender | salary | start      | BasicPay | Deduction | TaxablePay | IncomeTax | NetPAy |
   +----+---------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
   |  1 | Kajal   | NULL        |         |           | Female |  40000 | 2020-01-03 |        0 |         0 |          0 |         0 |      0 |
   |  2 | Sunny   | NULL        |         |           | male   |  20000 | 2019-11-13 |        0 |         0 |          0 |         0 |      0 |
   |  3 | Charlie | NULL        |         |           | male   |  30000 | 2022-08-19 |        0 |         0 |          0 |         0 |      0 |
   +----+---------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
   3 rows in set (0.00 sec)

________________________________________________________________________________________________________________________
UC 10- Ability to make Terissa as part of Sales and Marketing Department
       - Note: The Complete employee payroll roll need to be Inserted - If a Salary is now going to be updated
       multiple rows has to be updated creating unnecessary redundancy - Further There is 2 Employee ID so
       according to Database there is two different Terissa

       mysql> INSERT INTO employee_payroll(name,PhoneNumber,Address,Depatment,gender,salary,start,BasicPay,Deduction,TaxablePay,IncomeTax,NetPAy) VALUES
           -> ('Terisa',9870987656,'Mumbai','Marketing','Female',30000.00,'2020-01-03',30000.00,10000.00,5000.00,15000.00,5000.00);
       Query OK, 1 row affected (0.37 sec)

       mysql> select  * from employee_payroll;
       +----+---------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
       | id | name    | PhoneNumber | Address | Depatment | gender | salary | start      | BasicPay | Deduction | TaxablePay | IncomeTax | NetPAy |
       +----+---------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
       |  1 | Kajal   | NULL        |         |           | Female |  40000 | 2020-01-03 |        0 |         0 |          0 |         0 |      0 |
       |  2 | Sunny   | NULL        |         |           | male   |  20000 | 2019-11-13 |        0 |         0 |          0 |         0 |      0 |
       |  3 | Charlie | NULL        |         |           | male   |  30000 | 2022-08-19 |        0 |         0 |          0 |         0 |      0 |
       |  4 | Terisa  | 9870987656  | Mumbai  | Marketing | Female |  30000 | 2020-01-03 |    30000 |     10000 |       5000 |     15000 |   5000 |
       +----+---------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
       4 rows in set (0.00 sec)

       mysql> INSERT INTO employee_payroll(name,PhoneNumber,Address,Depatment,gender,salary,start,BasicPay,Deduction,TaxablePay,IncomeTax,NetPAy) VALUES
           -> ('Terisa',9870987656,'Mumbai','Sales','Female',30000.00,'2019-11-013',30000.00,10000.00,5000.00,15000.00,5000.00);
       Query OK, 1 row affected (0.10 sec)

       mysql> select  * from employee_payroll where name ='Terisa';
       +----+--------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
       | id | name   | PhoneNumber | Address | Depatment | gender | salary | start      | BasicPay | Deduction | TaxablePay | IncomeTax | NetPAy |
       +----+--------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
       |  4 | Terisa | 9870987656  | Mumbai  | Marketing | Female |  30000 | 2020-01-03 |    30000 |     10000 |       5000 |     15000 |   5000 |
       |  5 | Terisa | 9870987656  | Mumbai  | Sales     | Female |  30000 | 2019-11-13 |    30000 |     10000 |       5000 |     15000 |   5000 |
       +----+--------+-------------+---------+-----------+--------+--------+------------+----------+-----------+------------+-----------+--------+
       2 rows in set (0.06 sec)

___________________________________________________________________________________________________________________________________________________________________________
UC 11 - Draw the ER Diagram for Payroll Service DB - Identifies the Entities – Entities can be Identified using
        Normalization Technique- Check each attribute and see if they are Composite or Multi- Valued.

        mysql> create table Company
              -> (
              -> CompanyId INT unsigned NOT NULL AUTO_INCREMENT,
              -> CompanyName VARCHAR(30) NOT NULL,
              -> PRIMARY KEY (CompanyId)
              -> );
          Query OK, 0 rows affected (6.79 sec)

            mysql> describe company;
            +-------------+--------------+------+-----+---------+----------------+
            | Field       | Type         | Null | Key | Default | Extra          |
            +-------------+--------------+------+-----+---------+----------------+
            | CompanyId   | int unsigned | NO   | PRI | NULL    | auto_increment |
            | CompanyName | varchar(30)  | NO   |     | NULL    |                |
            +-------------+--------------+------+-----+---------+----------------+
            2 rows in set (0.17 sec)

            mysql> INSERT INTO company(CompanyName)VALUES('Relience');
            Query OK, 1 row affected (0.38 sec)

            mysql> INSERT INTO company(CompanyName)VALUES('Cognizant');
            Query OK, 1 row affected (0.08 sec)

            mysql> INSERT INTO company(CompanyName)VALUES('Wipro');
            Query OK, 1 row affected (0.06 sec)

            mysql> select * from company;
            +-----------+-------------+
            | CompanyId | CompanyName |
            +-----------+-------------+
            |         1 | Relience    |
            |         2 | Cognizant   |
            |         3 | Wipro       |
            +-----------+-------------+
            3 rows in set (0.00 sec)

           mysql> CREATE TABLE Employee(
               -> CompanyId INT UNSIGNED AUTO_INCREMENT,
               -> EmpId INT UNSIGNED NOT NULL,
               -> EmpName VARCHAR(30) NOT NULL,
               -> Phone VARCHAR(10) NOT NULL,
               -> Address VARCHAR(30) NOT NULL,
               -> Gender VARCHAR(10) NOT NULL,
               -> PRIMARY KEY(EmpId),
               -> FOREIGN KEY(CompanyId)REFERENCES Company(CompanyId)
               -> );
           Query OK, 0 rows affected (0.96 sec)

           mysql> describe employee;
           +-----------+--------------+------+-----+---------+----------------+
           | Field     | Type         | Null | Key | Default | Extra          |
           +-----------+--------------+------+-----+---------+----------------+
           | CompanyId | int unsigned | NO   | MUL | NULL    | auto_increment |
           | EmpId     | int unsigned | NO   | PRI | NULL    |                |
           | EmpName   | varchar(30)  | NO   |     | NULL    |                |
           | Phone     | varchar(10)  | NO   |     | NULL    |                |
           | Address   | varchar(30)  | NO   |     | NULL    |                |
           | Gender    | varchar(10)  | NO   |     | NULL    |                |
           +-----------+--------------+------+-----+---------+----------------+
           6 rows in set (0.00 sec)

           mysql> INSERT INTO employee VALUES
               -> (1,101,'SUNNY','9876789098','Nagpur','Male');
           Query OK, 1 row affected (0.13 sec)

           mysql> INSERT INTO employee VALUES
               -> (2,102,'Honey','7876789098','Mumbai','Female');
           Query OK, 1 row affected (0.08 sec)

           mysql> select * from employee;
           +-----------+-------+---------+------------+---------+--------+
           | CompanyId | EmpId | EmpName | Phone      | Address | Gender |
           +-----------+-------+---------+------------+---------+--------+
           |         1 |   101 | SUNNY   | 9876789098 | Nagpur  | Male   |
           |         2 |   102 | Honey   | 7876789098 | Mumbai  | Female |
           +-----------+-------+---------+------------+---------+--------+
           2 rows in set (0.00 sec)

           mysql> CREATE TABLE payroll(
               -> EmpId INT UNSIGNED NOT NULL,
               -> BasicPay DOUBLE NOT NULL,
               -> Deduction DOUBLE NOT NULL,
               -> TaxablePay DOUBLE NOT NULL,
               -> IncomeTax DOUBLE NOT NULL,
               -> NatPay DOUBLE NOT NULL,
               -> FOREIGN KEY(EmpId) REFERENCES employee(EmpId)
               -> );
           Query OK, 0 rows affected (0.92 sec)
            mysql> INSERT INTO payroll(EmpId,BasicPay,Deduction,TaxablePay,IncomeTax,NatPay)VALUES
                -> (101,30000.0,5000.0,3000.0,2000.0,2000.0);
            Query OK, 1 row affected (0.06 sec)

            mysql> INSERT INTO payroll(EmpId,BasicPay,Deduction,TaxablePay,IncomeTax,NatPay)VALUES
                -> (102,40000.0,6000.0,4000.0,3000.0,4000.0);
            Query OK, 1 row affected (0.06 sec)

            mysql> select * from payroll;
            +-------+----------+-----------+------------+-----------+--------+
            | EmpId | BasicPay | Deduction | TaxablePay | IncomeTax | NatPay |
            +-------+----------+-----------+------------+-----------+--------+
            |   101 |    30000 |      5000 |       3000 |      2000 |   2000 |
            |   102 |    40000 |      6000 |       4000 |      3000 |   4000 |
            +-------+----------+-----------+------------+-----------+--------+
            2 rows in set (0.00 sec)

           mysql>  CREATE TABLE Department1(
               -> EmpId INT UNSIGNED NOT NULL,
               -> DeptId INT NOT NULL AUTO_INCREMENT,
               -> DeptName VARCHAR(30) NOT NULL,
               -> PRIMARY KEY(DeptId,EmpId),
               -> FOREIGN KEY(EmpId)REFERENCES employee(EmpId)
               -> );
           Query OK, 0 rows affected (4.14 sec)

          mysql>  INSERT INTO Department1(DeptName)VALUES('Marketing');
          ERROR 1364 (HY000): Field 'EmpId' doesn't have a default value
          mysql>  INSERT INTO Department1(EmpId,DeptName)VALUES(101,'Marketing');
          Query OK, 1 row affected (0.14 sec)

          mysql>  INSERT INTO Department1(EmpId,DeptName)VALUES(102,'Sales');
          Query OK, 1 row affected (0.11 sec)

          mysql> select * from department1;
          +-------+--------+-----------+
          | EmpId | DeptId | DeptName  |
          +-------+--------+-----------+
          |   101 |      1 | Marketing |
          |   102 |      2 | Sales     |
          +-------+--------+-----------+
          2 rows in set (0.00 sec)

________________________________________________________________________________________________________________________
UC 12 - Ensure all retrieve queries done especially in UC 4, UC 5 and UC 7 are working with new table structure.

        mysql> SELECT Gender,COUNT(EmpName) FROM employee
            -> GROUP BY GENDER;
        +--------+----------------+
        | Gender | COUNT(EmpName) |
        +--------+----------------+
        | Male   |              1 |
        | Female |              1 |
        +--------+----------------+
        2 rows in set (2.05 sec)

        mysql> SELECT SUM(BasicPay) FROM payroll ;
        +---------------+
        | SUM(BasicPay) |
        +---------------+
        |         70000 |
        +---------------+
        1 row in set (0.13 sec)

        mysql> SELECT MIN(BasicPay) FROM payroll ;
        +---------------+
        | MIN(BasicPay) |
        +---------------+
        |         30000 |
        +---------------+
        1 row in set (0.04 sec)

        mysql> SELECT MAX(BasicPay) FROM payroll ;
        +---------------+
        | MAX(BasicPay) |
        +---------------+
        |         40000 |
        +---------------+
        1 row in set (0.00 sec)

        mysql> SELECT AVG(BasicPay) FROM payroll ;
        +---------------+
        | AVG(BasicPay) |
        +---------------+
        |         35000 |
        +---------------+
        1 row in set (0.00 sec)
_________________________________________________________________________________________________________________________